from django.db import models
from django.utils.translation import gettext as _
     
class FoodData(models.Model):
    SAMPLE_ID = models.CharField(_("SAMPLE_ID"), max_length=100)
    식품코드 = models.CharField(_("식품코드"), max_length=100)
    DB군 = models.CharField(_("DB군"), max_length=100)
    상용제품 = models.CharField(_("상용제품"), max_length=100)
    식품명 = models.CharField(_("식품명"), max_length=100)
    연도 = models.IntegerField(_("연도"))
    지역_제조사 = models.CharField(_("지역_제조사"), max_length=100)
    채취시기 = models.CharField(_("채취시기"), max_length=100)
    식품대분류 = models.CharField(_("식품대분류"), max_length=100)
    식품상세분류 = models.CharField(_("식품상세분류"), max_length=100)
    _1회제공량 = models.IntegerField(_("1회제공량"))
    내용량_단위 = models.CharField(_("내용량_단위"), max_length=100)
    총내용량_g = models.FloatField(_("총내용량(g)"))
    총내용량_mL = models.FloatField(_("총내용량(mL)"))
    에너지 = models.FloatField(_("에너지(㎉)"))
    수분 = models.FloatField(_("수분(g)"))
    단백질 = models.FloatField(_("단백질(g)"))
    지방 = models.FloatField(_("지방(g)"))
    탄수화물 = models.FloatField(_("탄수화물(g)"))
    총당류 = models.FloatField(_("총당류(g)"))
    자당 = models.FloatField(_("자당(g)"))
    포도당 = models.FloatField(_("포도당(g)"))
    과당 = models.FloatField(_("과당(g)"))
    유당 = models.FloatField(_("유당(g)"))
    맥아당 = models.FloatField(_("맥아당(g)"))
    총_식이섬유 = models.FloatField(_("총 식이섬유(g)"))
    칼슘 = models.FloatField(_("칼슘(㎎)"))
    철_mg = models.FloatField(_("철(㎎)"))
    철_ug = models.FloatField(_("철(㎍)"))
    마그네슘 = models.FloatField(_("마그네슘(㎎)"))
    인 = models.FloatField(_("인(㎎)"))
    칼륨 = models.FloatField(_("칼륨(㎎)"))
    나트륨 = models.FloatField(_("나트륨(㎎)"))
    아연 = models.FloatField(_("아연(㎎)"))
    구리 = models.FloatField(_("구리(㎎)"))
    망간 = models.FloatField(_("망간(㎎)"))
    셀레늄 = models.FloatField(_("셀레늄(㎍)"))
    레티놀 = models.FloatField(_("레티놀(㎍)"))
    베타카로틴 = models.FloatField(_("베타카로틴(㎍)"))
    비타민_D3 = models.FloatField(_("비타민 D3(㎍)"))
    토코페롤 = models.FloatField(_("토코페롤(㎎)"))
    토코트리에놀 = models.FloatField(_("토코트리에놀(㎎)"))
    비타민_B1 = models.FloatField(_("비타민 B1(㎎)"))
    비타민_B2 = models.FloatField(_("비타민 B2(㎎)"))
    나이아신 = models.FloatField(_("나이아신(㎎)"))
    엽산 = models.FloatField(_("엽산(DFE)(㎍)"))
    비타민_B12 = models.FloatField(_("비타민 B12(㎍)"))
    비타민_C = models.FloatField(_("비타민 C(㎎)"))
    총_아미노산 = models.FloatField(_("총 아미노산(㎎)"))
    이소류신 = models.FloatField(_("이소류신(㎎)"))
    류신 = models.FloatField(_("류신(㎎)"))
    라이신 = models.FloatField(_("라이신(㎎)"))
    메티오닌 = models.FloatField(_("메티오닌(㎎)"))
    페닐알라닌 = models.FloatField(_("페닐알라닌(㎎)"))
    트레오닌 = models.FloatField(_("트레오닌(㎎)"))
    발린 = models.FloatField(_("발린(㎎)"))
    히스티딘 = models.FloatField(_("히스티딘(㎎)"))
    아르기닌 = models.FloatField(_("아르기닌(㎎)"))
    티로신 = models.FloatField(_("티로신(㎎)"))
    시스테인 = models.FloatField(_("시스테인(㎎)"))
    알라닌 = models.FloatField(_("알라닌(㎎)"))
    아스파르트산 = models.FloatField(_("아스파르트산(㎎)"))
    글루탐산 = models.FloatField(_("글루탐산(㎎)"))
    글리신 = models.FloatField(_("글리신(㎎)"))
    프롤린 = models.FloatField(_("프롤린(㎎)"))
    세린 = models.FloatField(_("세린(㎎)"))
    콜레스테롤 = models.FloatField(_("콜레스테롤(㎎)"))
    총_포화_지방산 = models.FloatField(_("총 포화 지방산(g)"))
    부티르산 = models.FloatField(_("부티르산(4:0)(g)"))
    카프로산 = models.FloatField(_("카프로산(6:0)(g)"))
    카프릴산 = models.FloatField(_("카프릴산(8:0)(g)"))
    카프르산 = models.FloatField(_("카프르산(10:0)(g)"))
    라우르산 = models.FloatField(_("라우르산(12:0)(g)"))
    미리스트산 = models.FloatField(_("미리스트산(14:0)(g)"))
    팔미트산 = models.FloatField(_("팔미트산(16:0)(g)"))
    스테아르산 = models.FloatField(_("스테아르산(18:0)(g)"))
    아라키드산 = models.FloatField(_("아라키드산(20:0)(g)"))
    미리스톨레산 = models.FloatField(_("미리스톨레산(14:1)(g)"))
    팔미톨레산 = models.FloatField(_("팔미톨레산(16:1)(g)"))
    올레산 = models.FloatField(_("올레산(18:1(n-9))(g)"))
    박센산 = models.FloatField(_("박센산(18:1(n-7))(g)"))
    가돌레산 = models.FloatField(_("가돌레산(20:1)(g)"))
    리놀레산 = models.FloatField(_("리놀레산(18:2(n-6)c)(g)"))
    알파_리놀렌산 = models.FloatField(_("알파 리놀렌산(18:3(n-3))(g)"))
    감마_리놀렌산 = models.FloatField(_("감마 리놀렌산(18:3(n-6))(g)"))
    에이코사디에노산 = models.FloatField(_("에이코사디에노산(20:2(n-6))(g)"))
    에이코사트리에노산 = models.FloatField(_("에이코사트리에노산(20:3(n-6))(g)"))
    아라키돈산 = models.FloatField(_("아라키돈산(20:4(n-6))(g)"))
    에이코사펜타에노산 = models.FloatField(_("에이코사펜타에노산(20:5(n-3))(g)"))
    도코사펜타에노산 = models.FloatField(_("도코사펜타에노산(22:5(n-3))(g)"))
    도코사헥사에노산 = models.FloatField(_("도코사헥사에노산(22:6(n-3))(g)"))
    트랜스_지방산 = models.FloatField(_("트랜스 지방산(g)"))
    트랜스_올레산 = models.FloatField(_("트랜스 올레산(18:1(n-9)t)(g)"))
    트랜스_리놀레산 = models.FloatField(_("트랜스 리놀레산 (18:2t)(g)"))
    트랜스_리놀렌산 = models.FloatField(_("트랜스 리놀렌산(18:3t)(g)"))
    회분 = models.FloatField(_("회분(g)"))
    카페인 = models.FloatField(_("카페인(㎎)"))
    성분표출처 = models.CharField(_("성분표출처"), max_length=100)
    발행기관 = models.CharField(_("발행기관"), max_length=100)
    
    def __str__(self):
        return self.식품명


     
